package com.celso.fichaa.model;
// Generated 25/05/2015 08:57:14 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Domicilio generated by hbm2java
 */
@Entity
@Table(name="domicilio"
    ,catalog="ficha"
)
public class Domicilio  implements java.io.Serializable {


     private Integer id;
     private Agua agua;
     private DestinoLixo destinoLixo;
     private Endereco endereco;
     private Escoamento escoamento;
     private Localizacao localizacao;
     private Paredes paredes;
     private ProducaoRural producaoRural;
     private Profissional profissional;
     private SituacaoMoradia situacaoMoradia;
     private TelefoneReferencia telefoneReferencia;
     private TelefoneResidencial telefoneResidencial;
     private TipoAcesso tipoAcesso;
     private TipoDomicilio tipoDomicilio;
     private TratamentoAgua tratamentoAgua;
     private Integer numeroMoradores;
     private Integer numeroComodos;
     private Boolean animais;
     private Integer numeroAnimais;
     private Set<Animais> animaises = new HashSet<Animais>(0);

    public Domicilio() {
    }

	
    public Domicilio(Endereco endereco, Profissional profissional) {
        this.endereco = endereco;
        this.profissional = profissional;
    }
    public Domicilio(Agua agua, DestinoLixo destinoLixo, Endereco endereco, Escoamento escoamento, Localizacao localizacao, Paredes paredes, ProducaoRural producaoRural, Profissional profissional, SituacaoMoradia situacaoMoradia, TelefoneReferencia telefoneReferencia, TelefoneResidencial telefoneResidencial, TipoAcesso tipoAcesso, TipoDomicilio tipoDomicilio, TratamentoAgua tratamentoAgua, Integer numeroMoradores, Integer numeroComodos, Boolean animais, Integer numeroAnimais, Set<Animais> animaises) {
       this.agua = agua;
       this.destinoLixo = destinoLixo;
       this.endereco = endereco;
       this.escoamento = escoamento;
       this.localizacao = localizacao;
       this.paredes = paredes;
       this.producaoRural = producaoRural;
       this.profissional = profissional;
       this.situacaoMoradia = situacaoMoradia;
       this.telefoneReferencia = telefoneReferencia;
       this.telefoneResidencial = telefoneResidencial;
       this.tipoAcesso = tipoAcesso;
       this.tipoDomicilio = tipoDomicilio;
       this.tratamentoAgua = tratamentoAgua;
       this.numeroMoradores = numeroMoradores;
       this.numeroComodos = numeroComodos;
       this.animais = animais;
       this.numeroAnimais = numeroAnimais;
       this.animaises = animaises;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="AGUA_ID")
    public Agua getAgua() {
        return this.agua;
    }
    
    public void setAgua(Agua agua) {
        this.agua = agua;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DESTINO_LIXO_ID")
    public DestinoLixo getDestinoLixo() {
        return this.destinoLixo;
    }
    
    public void setDestinoLixo(DestinoLixo destinoLixo) {
        this.destinoLixo = destinoLixo;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ENDERECO_ID", nullable=false)
    public Endereco getEndereco() {
        return this.endereco;
    }
    
    public void setEndereco(Endereco endereco) {
        this.endereco = endereco;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ESCOAMENTO_ID")
    public Escoamento getEscoamento() {
        return this.escoamento;
    }
    
    public void setEscoamento(Escoamento escoamento) {
        this.escoamento = escoamento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="LOCALIZACAO_ID")
    public Localizacao getLocalizacao() {
        return this.localizacao;
    }
    
    public void setLocalizacao(Localizacao localizacao) {
        this.localizacao = localizacao;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAREDES_ID")
    public Paredes getParedes() {
        return this.paredes;
    }
    
    public void setParedes(Paredes paredes) {
        this.paredes = paredes;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCAO_RURAL_ID")
    public ProducaoRural getProducaoRural() {
        return this.producaoRural;
    }
    
    public void setProducaoRural(ProducaoRural producaoRural) {
        this.producaoRural = producaoRural;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Profissional_ID", nullable=false)
    public Profissional getProfissional() {
        return this.profissional;
    }
    
    public void setProfissional(Profissional profissional) {
        this.profissional = profissional;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SITUACAO_MORADIA_ID")
    public SituacaoMoradia getSituacaoMoradia() {
        return this.situacaoMoradia;
    }
    
    public void setSituacaoMoradia(SituacaoMoradia situacaoMoradia) {
        this.situacaoMoradia = situacaoMoradia;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TELEFONE_REFERENCIA_ID")
    public TelefoneReferencia getTelefoneReferencia() {
        return this.telefoneReferencia;
    }
    
    public void setTelefoneReferencia(TelefoneReferencia telefoneReferencia) {
        this.telefoneReferencia = telefoneReferencia;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TELEFONE_RESIDENCIAL_ID")
    public TelefoneResidencial getTelefoneResidencial() {
        return this.telefoneResidencial;
    }
    
    public void setTelefoneResidencial(TelefoneResidencial telefoneResidencial) {
        this.telefoneResidencial = telefoneResidencial;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TIPO_ACESSO_ID")
    public TipoAcesso getTipoAcesso() {
        return this.tipoAcesso;
    }
    
    public void setTipoAcesso(TipoAcesso tipoAcesso) {
        this.tipoAcesso = tipoAcesso;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TIPO_DOMICILIO_ID")
    public TipoDomicilio getTipoDomicilio() {
        return this.tipoDomicilio;
    }
    
    public void setTipoDomicilio(TipoDomicilio tipoDomicilio) {
        this.tipoDomicilio = tipoDomicilio;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TRATAMENTO_AGUA_ID")
    public TratamentoAgua getTratamentoAgua() {
        return this.tratamentoAgua;
    }
    
    public void setTratamentoAgua(TratamentoAgua tratamentoAgua) {
        this.tratamentoAgua = tratamentoAgua;
    }

    
    @Column(name="NUMERO_MORADORES")
    public Integer getNumeroMoradores() {
        return this.numeroMoradores;
    }
    
    public void setNumeroMoradores(Integer numeroMoradores) {
        this.numeroMoradores = numeroMoradores;
    }

    
    @Column(name="NUMERO_COMODOS")
    public Integer getNumeroComodos() {
        return this.numeroComodos;
    }
    
    public void setNumeroComodos(Integer numeroComodos) {
        this.numeroComodos = numeroComodos;
    }

    
    @Column(name="ANIMAIS")
    public Boolean getAnimais() {
        return this.animais;
    }
    
    public void setAnimais(Boolean animais) {
        this.animais = animais;
    }

    
    @Column(name="NUMERO_ANIMAIS")
    public Integer getNumeroAnimais() {
        return this.numeroAnimais;
    }
    
    public void setNumeroAnimais(Integer numeroAnimais) {
        this.numeroAnimais = numeroAnimais;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="domicilio_animais", catalog="ficha", joinColumns = { 
        @JoinColumn(name="DOMICILIO_ID", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="ANIMAIS_ID", nullable=false, updatable=false) })
    public Set<Animais> getAnimaises() {
        return this.animaises;
    }
    
    public void setAnimaises(Set<Animais> animaises) {
        this.animaises = animaises;
    }




}


